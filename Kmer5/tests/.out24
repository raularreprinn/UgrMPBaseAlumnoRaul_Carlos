==37625== Memcheck, a memory error detector
==37625== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==37625== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==37625== Command: /home/usuario/Documentos/UgrMPBaseAlumnoRaul_Carlos/Kmer5/./dist/CLASSIFY/GNU-Linux/CLASSIFY ../Genomes/human_chr6_s60000_l500000.dna ../Genomes/brewers_yeast_chrVII.s1_l500000.prf ../Genomes/chimpanzee_chr9_s1_l500000.prf ../Genomes/covidFullGenomeDNA.prf ../Genomes/drosophila_chr2L_s1_l500000.prf ../Genomes/ebolaFullGenomeDNA.prf ../Genomes/human_chr9_s10000_l500000.prf ../Genomes/monkeypoxFullGenomeDNA.prf ../Genomes/mouse_chr6_s3050050_l500000.prf ../Genomes/nematode_chrI_s1l500000.prf ../Genomes/rat_chr6_s1l500000.prf ../Genomes/zebrafish_chr6_s1l500000.prf
==37625== 
==37625== Invalid read of size 4
==37625==    at 0x10D1BE: KmerCounter::increaseFrequency(Kmer const&, int) (KmerCounter.cpp:152)
==37625==    by 0x10D6C3: KmerCounter::calculateFrequencies(char const*) (KmerCounter.cpp:212)
==37625==    by 0x111B29: main (CLASSIFY.cpp:148)
==37625==  Address 0x690 is not stack'd, malloc'd or (recently) free'd
==37625== 
==37625== 
==37625== Process terminating with default action of signal 11 (SIGSEGV)
==37625==  Access not within mapped region at address 0x690
==37625==    at 0x10D1BE: KmerCounter::increaseFrequency(Kmer const&, int) (KmerCounter.cpp:152)
==37625==    by 0x10D6C3: KmerCounter::calculateFrequencies(char const*) (KmerCounter.cpp:212)
==37625==    by 0x111B29: main (CLASSIFY.cpp:148)
==37625==  If you believe this happened as a result of a stack
==37625==  overflow in your program's main thread (unlikely but
==37625==  possible), you can try to increase the size of the
==37625==  main thread stack using the --main-stacksize= flag.
==37625==  The main thread stack size used in this run was 8388608.
==37625== 
==37625== HEAP SUMMARY:
==37625==     in use at exit: 619,093 bytes in 130 blocks
==37625==   total heap usage: 149 allocs, 19 frees, 1,135,655 bytes allocated
==37625== 
==37625== LEAK SUMMARY:
==37625==    definitely lost: 0 bytes in 0 blocks
==37625==    indirectly lost: 0 bytes in 0 blocks
==37625==      possibly lost: 0 bytes in 0 blocks
==37625==    still reachable: 619,093 bytes in 130 blocks
==37625==         suppressed: 0 bytes in 0 blocks
==37625== Reachable blocks (those to which a pointer was found) are not shown.
==37625== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==37625== 
==37625== For lists of detected and suppressed errors, rerun with: -s
==37625== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Segmentation fault (core dumped)
